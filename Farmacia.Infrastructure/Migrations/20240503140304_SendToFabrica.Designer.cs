// <auto-generated />
using System;
using Farmacia.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Farmacia.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240503140304_SendToFabrica")]
    partial class SendToFabrica
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Farmacia.Domain.Entities.Fabricas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Medicamentos_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Medicamentos_Id");

                    b.ToTable("Fabricas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Local = "Estrada Alfragide 67 Alfrapark, Edifício D, 2610-008 Amadora, Portugal",
                            Medicamentos_Id = 1,
                            Name = "AbbVie Portugal"
                        },
                        new
                        {
                            Id = 2,
                            Local = "Lagoas Park, Edifício 10, Piso 0, 2740-244 Porto Salvo, Portugal",
                            Medicamentos_Id = 2,
                            Name = "Pfizer Portugal"
                        },
                        new
                        {
                            Id = 3,
                            Local = "Rua da Quinta do Pinheiro, 5, 2790-143 Carnaxide, Portugal",
                            Medicamentos_Id = 3,
                            Name = "Bayer Portugal"
                        },
                        new
                        {
                            Id = 4,
                            Local = "Quinta da Fonte, Edifício D. Amélia, 2770-192 Paço de Arcos, Portugal",
                            Medicamentos_Id = 4,
                            Name = "Novartis Portugal"
                        },
                        new
                        {
                            Id = 5,
                            Local = "Lagoas Park, Edifício 14, Piso 0, 2740-262 Porto Salvo, Portugal",
                            Medicamentos_Id = 1,
                            Name = "Merck Sharp & Dohme Portugal"
                        },
                        new
                        {
                            Id = 6,
                            Local = "Rua 25 de Abril 25, 2740-262 Porto Salvo, Portugal",
                            Medicamentos_Id = 2,
                            Name = "Johnson & Johnson Portugal"
                        });
                });

            modelBuilder.Entity("Farmacia.Domain.Entities.Medicamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Medicamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 20.0,
                            Description = "txt",
                            ImageUrl = "https://placehold.co/600x400",
                            Name = "Benuron",
                            Price = 28.0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 30.0,
                            Description = "Analgésico e antipirético",
                            ImageUrl = "https://placehold.co/600x400",
                            Name = "Paracetamol",
                            Price = 15.0
                        },
                        new
                        {
                            Id = 3,
                            Amount = 25.0,
                            Description = "Antibiótico de amplo espectro",
                            ImageUrl = "https://placehold.co/600x400",
                            Name = "Amoxicilina",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 4,
                            Amount = 40.0,
                            Description = "Anti-inflamatório não esteroide",
                            ImageUrl = "https://placehold.co/600x400",
                            Name = "Ibuprofeno",
                            Price = 20.0
                        });
                });

            modelBuilder.Entity("Farmacia.Domain.Entities.Fabricas", b =>
                {
                    b.HasOne("Farmacia.Domain.Entities.Medicamentos", "Medicamentos")
                        .WithMany()
                        .HasForeignKey("Medicamentos_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
