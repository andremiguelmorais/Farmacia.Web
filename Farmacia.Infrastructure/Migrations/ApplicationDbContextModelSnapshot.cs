// <auto-generated />
using System;
using Farmacia.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Farmacia.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Farmacia.Domain.Entities.Medicamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Medicamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 20.0,
                            Description = "txt",
                            ImageUrl = "https://placehold.co/600x400",
                            Name = "Benuron",
                            Price = 28.0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 30.0,
                            Description = "Analgésico e antipirético",
                            ImageUrl = "https://placehold.co/600x400",
                            Name = "Paracetamol",
                            Price = 15.0
                        },
                        new
                        {
                            Id = 3,
                            Amount = 25.0,
                            Description = "Antibiótico de amplo espectro",
                            ImageUrl = "https://placehold.co/600x400",
                            Name = "Amoxicilina",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 4,
                            Amount = 40.0,
                            Description = "Anti-inflamatório não esteroide",
                            ImageUrl = "https://placehold.co/600x400",
                            Name = "Ibuprofeno",
                            Price = 20.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
